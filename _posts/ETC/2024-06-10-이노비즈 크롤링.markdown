---
layout: post
title: 이노비즈 협회의 일경험 리스트 크롤링하기
date: 2024-06-09 19:20:23 +0900
category: ETC
---
  
```python
#이노비즈 협회의 일경험 참여리스트 목록을 추려서 확인하고자 하는데 각 기업들을 정리하고 확인할 필요가 있어 데이터만 추출한다.  
<br>  
#그런데 기업을 선택해야 직무분야를 볼 수 있는 구조이다.  
#회사별 직무분야의 수는 제각각이다.  
#비슷한 구조를 가지고 있는지 확인해봤는데 그렇지도 않다.  
#//*[@id="hope_com_duti_1"]  #1개  
#/html/body/div/div[2]/div[1]/div/div[2]/form/div/table[3]/tbody/tr[2]/td[3]/select #2개  
    
그래서 bs4만으로 뽑기엔 한계가 있다. 
<br>  
#https://googlechromelabs.github.io/chrome-for-testing/ 에서 크롬버전에 맞는 드라이버 다운로드 안해도 됨 
#!pip install selenium

#셀레니움 버전이 올라가고 크롬 드라이버를 받을 필요가 없어졌다. 
driver = webdriver.Chrome()
#url = 'https://innobiz.or.kr/future/join_per.asp?code=1'
url = 'https://innobiz.or.kr/future/login.asp'
driver.get(url)
```  
<br>  
```python
#bs4만으로 html에서 원하는 정보를 얻는것이 불가능해 셀레니움을 활용해야 했다. 
#이노비즈는 로그인을 해야 서비스 사용이 가능하다. 
#로그인을 자동화한다. 
from selenium.webdriver.common.by import By

input_id= input('아이디 입력')
input_pw= input('비밀번호 입력')

#id css
id_css = '#P > td > div > input[type=text]'
#비번 css
pw_css = '#container > div > div > div.login > div > div.input > table > tbody > tr:nth-child(3) > td > div > input[type=password]'
#로그인 버튼 css
login_css = '#container > div > div > div.login > div > div.input > div > a'

input_i = driver.find_element(By.CSS_SELECTOR, id_css)
input_p = driver.find_element(By.CSS_SELECTOR, pw_css)

input_i.send_keys(input_id)
input_p.send_keys(input_pw)

#로그인
#login_button = driver.find_element_by_css_selector(css1) 불가
login_button = driver.find_element(By.CSS_SELECTOR, login_css)
login_button.click()

print('clear') #비밀번호 유출을 가리기 위한 코드 
```  
<br>  
```python
#청년 사업신청 버튼 누르기 
into_css = '#container > div.contents > div.applybox_wrap > ul > li:nth-child(1) > div > ul > li > a'
into_button =driver.find_element(By.CSS_SELECTOR, into_css)
into_button.click()
```  
<br>  
> 중간 확인  

#페이지 정보 가져오기 

```python
temp = driver.find_elements(By.XPATH, '//*[@id="container"]/div[1]/div/div[2]/form/div/table[3]/tbody/tr[2]/td[2]/select')

dropdown_list = []
for i,v in enumerate(temp):
    print(i, v.text)
#모든 텍스트가 하나로 합쳐져 있어 따로 처리해줄 필요가 있었다.     
```
<br>  
```python
dropdown_dict = {}
v.text.split('\n              ')
for i,t in enumerate(v.text.split('\n              ')):
    if i==0:
        continue
    dropdown_dict[t.strip()]=[]
dropdown_dict
```  
<br>    
```python
#드롭다운 리스트 선택
#dropdowns= driver.find_element(By.CSS_SELECTOR, '#container > div.contents > div > div.man_merit_form > form > div > table:nth-child(7) > tbody > tr:nth-child(2) > td:nth-child(2) > select')
#dropdowns.click()

#각 드롭다운 리스트 요소 변경 
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait
# Select 객체를 만든다. 해당 객체를 만들어서 드롭다운 리스트 요소들을 선택 지정할 수 있다. 
select=Select(dropdowns)

for i,v in enumerate(dropdown_dict.keys()):
    #선택값을 없앴지만 드롭다운의 순서는 그대로이므로 +1
    #중소기업기술혁신협회는 0번이 아니라 1번이다.
    #drop2=Select(dropdowns)
    #Select를 활용해 순서 기준으로 회사를 달리하며 데이터를 추출한다. 
    select.select_by_index(i)  
    print(i, v) #확인용        
    #드롭다운 리스트 요소가 변경되었으므로 우측 직무분야 선택도 확인 
    drop2=driver.find_element(By.CSS_SELECTOR, '#hope_com_duti_1')
    select2 = Select(drop2)        
    #Select의 요소들의 수만큼 반복문 수행 
    for i2, v2 in enumerate(select2.options):
        #Selenium은 웹과 직접 상호작용하기 때문에, 웹의 요소들이 로딩될 때까지 기다리지 않으면 error가 날 때가 있다. 
        #WebDriverWait로 이벤트가 로딩될 때까지 n초 동안 대기한다. 
        WebDriverWait(driver, 2) #2초 대기
        if i2 == 0:
            continue
        #print(i2, v2.text)
        dropdown_dict[v].append(v2.text)             
#브라우저 종료
driver.quit()
```  
<br>
#데이터프레임 to csv 저장  
```python
#ValueError: All arrays must be of the same length
#orient의 default는 columns인데 이렇게 되면 에러가 나서 변환을 할 수 없다. 
#columns로 넣으면 각 회사는 열이름이 되고 나머지 데이터들이 series값이 되어 들어가는데 각 회사의 직무 수가 다르기 때문에 오류가 난다. 

#orient: {index / columns / tight} 변환 방식이다. 
#index은 행을 키값으로 지정, columns는 열을 키값으로 지정, tight는 키값으로 [index / columns / data / index_names / columns_names] 를 가진다.
#index로 넣어주면 해결된다. 

df = pd.DataFrame.from_dict(dropdown_dict, orient='index')
df.to_csv('./이노비즈.csv', encoding="cp949")
```
