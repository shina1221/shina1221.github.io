---
layout: post
title: 머신러닝 프로젝트 처음 시작하기
date: 2023-08-29 19:20:23 +0900
category: ML 
---
# 머신러닝 실무 프로젝트
      
> 머신러닝 프로젝트의 과정  

1. 문제를 정의한다.  
2. 머신러닝을 사용하지 않는 방법은 없는지 검토한다.  
3. 시스템을 설계한다.  
4. 사용할 알고리즘을 선택한다.  
5. 특징과 정답 데이터, 로그를 설계한다.  
6. 데이터를 전처리한다.  
7. 학습을 수행하고 파라미터를 튜닝한다.  
8. 시스템에 통합한다.  
  
-큰 관점  
1~2 해결하려는 문제를 머신러닝으로 풀 수 있는 문제로 바꾸기  
3~6 문제를 풀기 위한 도구 선택 및 전처리  
7   모델 구축하기  
8  기존 서비스에 통합하기  
  
-머신러닝으로 해결한 사례를 찾으면 세가지 사항을 중점적으로 확인  
  
1. 어떤 알고리즘을 사용했나?  
2. 어떤 데이터를 특징으로 사용했나?  
3. 머신러닝 부분을 어떻게 통합했나?  
  
-머신러닝을 사용한 시스템 구축의 어려움  
  
1. 확률적인 부분이 있어 자동 테스트가 어렵다.  
ex) 알고리즘이 난수를 사용해 확률적으로 처리하는 코드를 포함하기 때문에   
규칙 기반으로 처리할 때 처럼 시스템의 행동이 결정론적으로 정해지지 않는다.   
2. 오래 운용하면 사용자 경향이 변해 입력 경향도 바뀐다.  
ex) 자바는 예전에 지역이름이었는데 지금은 프로그래밍 언어로 본다.   
3. 처리 파이프라인이 복잡해진다.  
4. 데이터 의존 관계가 복잡해진다.  
5. 실험 코드 혹은 파라미터가 포함되기 쉽다.   
6. 개발 시스템과 운영 시스템간의 언어/프레임워크가 제각각이기 쉽다.  
  
-비즈니스 문제에 머신러닝을 적용하면 좋은 케이스  

대량의 데이터에 대해 고속으로 안정된 판단을 내려야 하며 예측 결과에 일정 수준의  
오류가 용인되는 경우  
    
이상의 조건을 갖췄다면 우선 MVP(최소 기능 제품)을 만들어본다.  
MVP: 린 스타트업에서 많이 다루는 주제로 고객가치를 창출할 수 있는 최소한의 제품이다.  
  
-시스템 설계하기  
  
핵심  
예측 결과를 어떻게 이용할 것인가?  
예측 오류의 영향을 어떻게 흡수할 것인가?  
  
-알고리즘 선택하기  
  
과거에 비슷한 문제를 어떻게 풀었는지 조사해보면 대강의 후보를 정할 수 있다.  
데이터의 특성ㅇ르 모른다면 군집화 같은 비지도 학습이나 스캐터플롯 매트릭스로 시각화해보고  
어떤 방법으로 문제를 풀지 고민해본다.  
또 데이터 양을 예상해보고 온라인 학습과 배치학습 중 어느쪽이 적합한지 가늠해본다.  
  
-특징, 정답 데이터, 로그 설계하기  
  
특징: 머신러닝의 예측 모델에 입력될 정보이다.  
ex) 오늘의 기온 섭씨 1.0도 강수량0.8mm 풍속 0m/s 적설량2cm 날씨 흐림은
[1.0, 0.8, 0, 2, 1]같은 입력 벡터로 나타낼 수 있다.  
  
범주형 변수(흐림), 더미변수(맑음0, 흐림1)  
labelEncoder, OneHotencoder를 사용해 범주형 변수를 더미변수로 변환할 수 있다.  

머신러닝에서는 특징을 선택할 때 머신러닝에 입력될 특징이 예측에 필요한 정보를  
포함하는지 전문가에게 미리 확인한다. 또한 도메인 전문가의 협조를 얻어 이 정보 중  
관심 대상이 되는 현상에 영향을 줄 만한 것이 무엇인지 확인한다.  
  
특징을 전한 다음에는 입력 데이터로 쓸 정답 데이터를 준비한다.  
정답 데이터: 지도 학습에서 ㅍ필요한 정답 범주 레이블(정답 레이블)과  
그 정답의 입력 데이터의 쌍을 말한다.  
범주를 머신러닝에서는 클래스라고 한다.  
  
-데이터 전처리  
  
전처리는 불필요한 정보를 발라내고, 데이터를 머신러닝에 사용할 수 있는 형태로  
바꾸는 과정이 주가 된다.  
웹 로그 같은 날것 상태의 데이터는 텍스트 형식 등을 취하고 있어 바로 사용할 수 없다.  
수치 데이터 역시 누락값이나 정상 범위를 벗어난 이상값을 처리하고, 값의 변동폭으로 인한  
영향을 줄이는 정규화 등의 작업을 거쳐야 한다.  
범주형 변수를 더미 변수로 변환하는 것도 전처리에 포함된다.  
  
-학습 및 파라미터 튜닝  
  
머신러닝을 알고리즘을 조정하는 파라미터를 시행착오를 거쳐가며 수정해보고  
결과가 더 나은 값을 찾는다.  
**우선 사람이 직접 부여한 정답이나 규칙 기반으로 예측한 성능을 기준치로 하여**  
**이를 뛰어넘는 것을 목표로 한다.**  
  
우선 로지스틱 회귀 같은 비교적 간단한 알고리즘과 기존 라이브러리 및 프레임워크를  
사용해 간단한 예측 모델을 만들어본다.  
첫번째 예측 모델에서 99.99% 같이 아주 높은 성능이 나온다면 어딘가 실수가 있었는지  
의심해봐야한다. 이런 경우 대부분은 훈련 데이터에서만 성능이 좋고 처음보는 데이터는  
잘 예측하지 못하는 과적합니다. 훈련 데이터에 테스트 데이터가 일부 섞이면서 발생하는  
데이터 유출이 생긴것이다.  
*처음보는 데이터를 잘 처리하는 것을 일반화 성능이 높다고 한다.  
  
데이터 유출  
ex) 캐글에서 진행한 암 예측 콘테스트에서 제공한 데이터에 전립선 수술을 받았는지가  
표시된 필드가 포함된 적이 있었다. 예측 모델은 성능이 매우 좋았지만, 이 정보 자체가  
전립선암을 앓는 환자가 암을 진단받은 후 수술을 받았다는 뜻이므로 암 진단을 새로이  
예측하는데 의미 없는 모델이 되어버렸다.  
  
이런 점은 주의하며 학습 및 파라미터 튜닝을 진행한다.  
과적합 방지하기  
1. 교차검증으로 파라미터를 튜닝한다.  
2. 규제화를 적용한다.  
3. 학습곡선을 살핀다.  
*교차검증: 학습용 훈련데이터와 모델 검증용 검증 데이터를 분할하여 특정 데이터에  
의존성이 낮은 즉 일반화 성능이 좋은 모델을 학습시키는 방법이다.  
ex) 데이터를 10개 그룹으로 나눠 그 중 9개를 훈련 데이터로 삼아 모델을 학습한 다음,  
남은 하나를 검증 데이터로 사용해 성능을 측정한다. 이런 과정을 검증 데이터용 그룹을  
바꿔가며 10번 반복하며 평균 성능이 높은 하이퍼파라미터를 선택한다.  
실제 절차에서는 먼저 한 그룹정도의 데이터를 미리 뺴 마지막 성능 평가에만 사용해  
하이퍼파라미터 튜닝과 독립적으로 성능을 평가한다.  
(이 책에선 훈련 데이터와 검증 데이터를 개발 데이터라고 부를 예정이다.)  
*하이퍼파라미터: 신경망의 은닉층 개수나 로지스틱 회귀의 문턱값처럼 모델의 성능을  
좌우하는 파라미터이다.  
  
**과적합**을 방지하고 일반화 성능을 향상시키는 다른 방법으로 규제화가 사용되기도 한다.  
규제화는 모든 데이터를 정확하게 분류하는 대신, 약간 잘못 분류하는 데이터가  
생기더라도 새로운 데이터를 더 적절히 처리하는 방법이다.  
  
*학습곡선: 데이터 규모나 학습 반복 횟수에 따른 훈련 데이터와 검증 데이터의 손실값  
또는 예측 정확도의 추이를 그래프로 그린것이다.  
  
-시스템에 통합하기  
좋은 성능 모델을 얻었다면 이후 예측 성능과 그에 따른 비즈니스 성과를 모니터링하는 것이다.  
시스템 통합은 비즈니스 관점에서 가설 검증을 위한 단계에 지나지 않는다.  
예측 성능 모니터링에는 미리 사람이 작성한 데이터와 정답 레이블의 쌍으로 이뤄진  
데이터셋을 이용해 성능을 측정한다.  
  
**본래 목표는 예측 모델을 만들어 매출이나 유료회원 증가같은 비즈니스 지표(KPI)를**  
**개선하는 것이다.**  

> 운영 시스템에서 발생하는 머신러닝 문제 대처 방법  

  

