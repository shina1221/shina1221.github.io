---
layout: post
title: 조인의 종류
date: 2023-08-25 19:20:23 +0900
category: CS
---
# 면접을 위한 CS 전공지식 노트  
> 조인의 종류    

조인: 하나의 테이블이 아닌 두 개 이상의 테이블을 묶어 하나의 결과물을 만드는 것이다.  
MySQL에서는 JOIN 쿼리로 MongoDB에서는 lookup이라는 쿼리로 처리할 수 있다.  
MongoDB에서는 lookup은 되도록 사용하지 않는 것이 좋은데 MongoDB는 조인연산(lookup)에  
대해 관계형 데이터베이스보다 성능이 떨어지기 때문이다.  
따라서 여러 테이블을 조인해야 하는 작업이 많은 경우 관계형 데이터베이스를 쓰는것이 좋다.  
  
조인의 종류  
내부조인(inner join): 왼쪽 테이블과 오른쪽 테이블의 두 행이 모두 일치하는 행이 있는  
부분만 표시  
왼쪽조인(left join): 왼쪽 테이블의 모든 행이 결과 테이블에 표기된다.  
오른쪽조인(right outer join): 오른쪽 테이블의 모든 행이 결과테이블에 표기된다.  
합집합 조인(full outer join): 두 개의 테이블을 기반으로 조인 조건에 만족하지 않는  
행까지 모두 표기한다.  
  
조인의 원리  
중첩루프조인(Nested Loop Join): 중첩 for문과 같은 원리로 조건에 맞는 조인을 사용하는 방법이다.  
랜덤 접근에 대한 비용이 많이 증가하므로 대용량의 테이블에는 부적합하다.  
ex) t1, t2 테이블을 조인할 때 첫번째 테이블에서 행을 한번에 하나씩 읽고 그다음 테이블에서도  
행을 하나씩 읽어 조건에 맞는 레코드를 찾아 결과값을 반환한다.  
  
블록 중첩 루프 조인(Block Nested Loop Join): 조인할 테이블을 작은 블록으로 나눠   
블록 하나씩 조인하는 방식이다.  
  
정렬 병합 조인: 각각의 테이블을 조인할 필드 기준으로 정렬하고 정렬이 끝난 이후에 조인  
작업을 수행하는 조인이다. 조인할 때 쓸 적절한 인덱스가 없고 대용량 테이블들을 조인하고  
조인조건으로 <,>등 범위 비교 연산자가 있을 때 사용한다.  
  
해시 조인: 해시 테이블을 기반으로 조인하는 방법이다. 두 개의 텡블을 조인한다고  
했을 때 하나의 테이블이 메모리에 온전히 들어간다면 보통 중첩 루프 조인보다 더 효율적이다.  
(메모리에 올릴 수 없을 정도로 크다면 디스크를 사용하는 비용일 발생하며 동등(=)  
조인에서만 사용가능하다.)  
  
MySQL에서의 해시 조인 단계는 빌드단계와 프로브단계로 나뉜다.    
  
빌드단계: 입력 테이블 중 하나를 기반으로 메모리 내 해시 테이블을 빌드하는 단계이다.  
조인하려는 테이블 중 바이트가 더 작은 테이블을 기반으로 테이블을 빌드한다. 또한  
조인에 사용되는 필드가 해시 테이블의 키로 사용된다.  
  
프로브 단계: 프로브 단계 동안 레코드 읽기를 시작한다.  
각 테이블은 한번씩만 읽어 중첩해서 두 개의 테이블을 읽는 중첩 루프 조인보다 보통  
성능이 더 좋다. 사용가능한 메모리 양은 시스템 변수 join_buffer_size에 의해 제어되고  
런타임시 조정가능하다.  
