---
layout: post
title: 네트워크02
date: 2023-08-02 19:20:23 +0900
category: CS
---
# 면접을 위한 CS 전공지식 노트  
> TCP/IP 4계층 모델

인터넷 프로토콜 스위트: 인터넷에서 컴퓨터들이 서로 정보를 주고받는데 쓰이는 프로토콜의 집합.  
이를 TCP/IP 4계층 모델로 설명하거나 OSI 7계층 모델로 설명하기도 한다.  

TCP/IP 계층과 OSI 7계층  
애플리케이션 계층 | 애플리케이션 계층     
애플리케이션 계층 | 프레젠테이션 계층   
애플리케이션 계층 | 세션 계층  
전송 계층 | 전송 계층  
인터넷 계층 | 네트워크 계층  
링크 계층 | 데이터 링크 계층  
링크 계층 | 물리 계층  
<br>  

> 애플리케이션 계층: FTP/HTTP/SSH/SMTP/DNS 등 응용 프로그램이 사용되는 프로토콜 계층.  

FTP: 장치와 장치 간의 파일을 전송하는 데 사용되는 표준 통신 프로토콜  
SSH: 보안되지 않은 네트워크에서 네트워크 서비스를 안전하게 운영하기 위한 암호화 네트워크 프로토콜  
HTTP: World Wide Web을 위한 데이터 통신의 기초이자 웹 사이트를 이용하는데 쓰는 프로토콜  
SMTP: 전자메일 전송을 위한 인터넷 표준 통신 프로토콜  
DNS: 도메인 이름과 IP 주소를 매핑해주는 서버  
예를 들어 www.naver.com에 DNS 쿼리가 오면 ROOT DNS > .com DNS > .naver DNS > .www DNS 과정을 거쳐 완벽한 주소를 찾아  
IP 주소를 매핑한다. 그래서 WWW.naver.com의 IP 주소가 222.111.222.111에서 222.111.222.122로 바뀌어도   
www.naver.com이라는 주소로 서비스가 가능하다.  

> 전송계층: 송신자와 수신자를 연결하는 통신 서비스를 제공하며 연결 지향 ㅅ데이터 스트림 지원, 신뢰성, 흐름제어를 제공한다.  
애플리케이션과 인터넷 계층 사이의 데이터가 전달될 때 중계역할을 수행한다.  
예로 TCP, UDP 등이 있다.  
TCP: 패킷 사이의 순서를 보장하고 연결지향 프로토콜을 사용해 수신여부를 확인하며 가상회산 패킷 교환 방식을 사용한다.  
UDP: 순서를 보장하지 않고 수신 여부를 확인하지 않으며 단순히 데이터만 주는 데이터그램 패킷 교환 방식을 사용한다.  
*가상회선 패킷 교환방식: 각 패킷에는 가상회선 식별자를 포함된다. 모든 패킷을 전송하면 가상회선이 해제되고 패킷들은  
전송된 순서대로 도착하는 방식이다.   
*데이터그램 패킷 교환방식: 패킷이 독립적으로 이동하며 최적의 경로를 선택해 가는데, 하나의 메시지에서 분할된 여러 패킷은  
서로 다른 경로로 전송될 수 있고 도착한 순서가 다를 수도 있다.  

<br>    
TCP 연결 성립 과정  
TCP는 신뢰성을 확보하기 위해 3 way handshake작업을 수행한다.  
1. SYN 단계: 클라이언트는 서버에 클라이언트의 ISN을 담아 SYN을 보낸다.  
*ISN: 새로운 TCP 연결의 첫번째 패킷에 할당된 임의의 시퀀스 번호이다.   
초기 네트워크 연결시 할당된 32비트 고유 시퀀스 번호이다.   
2. SYN+ACK 단계: 서버는 클라이언트의 SYN을 수신하고 서버의 ISN을 보내며 승인번호로 클라이언트의 ISN+1을 보낸다.  
3. ACK 단계: 클라이언트는 서버의 ISN +1한 값이 승인번호를 담아 ACK를 서버에 보낸다.    
*SYN(SYNchronization//동기화): 연결 요청 플래그  
*ACK(ACKnowledgement//승인): 응답 플래그  
  
TCP는 핸드셰이크 과정이 있기 때문에 신뢰성 있는 계층이라고 하고 UDP는 없기 때문에 신뢰성 없는 계층이라고 한다.  
<br>
TCP 연결 해제 과정  
1. 클라이언트가 연결을 닫으려 할 때 FIN으로 설정된 세그먼트를 보낸다.  
그리고 클라이언트는 FIN_WAIT_1상태로 들어가고 서버의 응답을 기다린다.  
2. 서버는 클라이언트로 ACK라는 승인 세그먼트를 보낸다.  
그리고 CLOSE_WAIT 상태에 들어간다. 클라이언트가 세그먼트를 받으면 FIN_WAIT_2 상태에 들어간다.  
3. 서버는 ACK를 보내고 일정 시간 이후에 클라이언트에 FIN이라는 세그먼트를 보낸다.  
4. 클라이언트는 TIME_WAIT 상태가 되고 다시 서버로 ACK를 보내 서버는 CLOSED 상태가 된다.  
이후 클라이언트는 어느 정도의 시간을 대기한 후 연결이 닫히고 클라이언트와 서버의 모든 자원 연결이 해제된다.  
*세그먼트: 전송 계층에서의 데이터 교환 단위로 TCP 세그먼트는 양 끝단 간 연결된 TCP 세션 내 서로 교환, 전달되는 데이터 단위    
*TIME-WAIT: 소켓이 바로 소멸되지 않고 일정시간 유지되는 상태로 우분투는 60초 윈도우는 4분으로 설정되어 있다.  

<br>  
TIME WAIT를 둬 일정 시간 뒤에 닫는 이유  
1. 지연 패킷이 발생할 경우 데이터 무결성(데이터의 정확성과 일관성을 유지하고 보증)문제가 발생하기 때문이다.  
2. 두 장치의 연결이 닫혔는지 확인하기 위해서다.  만약 LAST_ACK 상태에서 닫히게 되면 다시 새로운 연결을 하려고 할 때  
장치는 줄곧 LAST_ACK로 되어 있기 때문에 접속 오류가 나타나게 될 것이다.  
  
> 인터넷 계층: 장치로부터 받은 네트워크 패킷을 IP 주소로 지정된 목적지로 전송하기 위해 사용되는 계층이다.  
IP, ARP, ICMP 등이 있고 패킷을 수신해야할 상대의 주소를 지정해 데이터를 전달한다.  
상대방이 제대로 받았는지에 대해 보장하지 않는 비연결형적인 특징을 가진다.  
<br>  
> 링크 계층: 전선, 광섬유, 무선 등으로 실질적으로 데이터를 전달하며 장치 간에 신호를 주고 받는 규칙을 정하는 계층이다.  
네트워크 계층이라고도 하며 이를 물리 계층과 데이터 링크 계층으로 나누기도 하는데  
물리 계층은 무선 LAN과 유선 LAN을 통해 0과 1로 이뤄진 데이터를 보내는 계층을 말한다.  
데이터 링크 계층은 이더넷 프레임을 통해 에러 확인, 흐름제어, 접근 제어를 담당하는 계층을 말한다.  

*LAN: Local Area Network의 약어로서, 한정된 지리적 범위 내에서 컴퓨터 및 기타 네트워크 장치들이 연결되어   
데이터와 자원을 공유하는 네트워크이다.   

유선 LAN: 유선 LAN을 이루는 이더넷은 IEEE802.3이라는 프로토콜을 따르며 전이중화 통신을 쓴다.  
*전이중화 통신: 양쪽 장치가 송신로와 수신로로 나눠 데이터를 동시에 송수신 할 수 있는 방식을 말한다.  
<br>  

무선 LAN: 수신과 송신에 같은 채널을 사용하기 때문에 반이중화 통신을 사용한다.  
*반이중화 통신 양쪽 장치는 서로 통신할 수 있지만, 동시에는 통신할 수 없으며 한 번에 한 방향만 통신할 수 있는 방식이다.  
일반적으로 장치가 신호를 수신하기 시작하면 응답하기 전에 전송이 완료될 때까지 기다려야 한다.  
또한 둘 이상의 장치가 동시에 전송하면 충돌이 발생해 메시지가 손실되거나 왜곡될 수 있기 때문에 충돌 방지 시스템이 필요하다.  

데이터 링크 계층은 이더넷 프레임을 통해 전달받은 데이터의 에러를 검출하고 캡슐화한다.  
|Preamble|SFD  |DMAC |SMAC |EtherType|Payload|CRC  |  
|7byte   |1byte|6byte|6byte|2byte    |       |4byte|  
Preamble: 이더넷 프레임이 시작을 알린다.  
SFD(Start Frame Delimiter): 다음 바이트부터 MAC 주소 필드가 시작됨을 알린다.  
DMAC, SMAC: 수신, 송신 MAC 주소를 말한다.  
EtherType: 데이터 계층 위의 계층인 IP 프로토콜을 정의한다. IPv4나 IPv6가 있다.  
Payload:전달받은 데이터  
CRC: 에러 확인 비트  

*MAC 주소: 컴퓨터나 노트북 등 각 장치에는 네트워크에 연결하기 위한 장치(LAN카드)가 있는데,  
이를 구별하기 위한 식별번호로 6바이트(48기비트)로 구성된다.  

> 계층 간 데이터 송수신 과정  

애플리케이션 계층에서 전송계층을 요청(request)값들이 캡슐화 과정을 거쳐 전달되고,  
다시 링크계층을 통해 해당 서버와 통신하고,  
해당 서버의 링크 계층으로부터 애플리케이션까지 비캡슐화 과정을 거쳐 데이터가 전송됩니다.  
  
캡슐화 과정: 상위 계층의 헤더와 데이터를 하위 계층의 데이터 부분에 포함시키고 해당 계층의 헤더를 삽입하는 과정이다.  
애플리케이션 계층: 데이터   
전송 계층: TCP(L4 헤더), 데이터  
인터넷 계층: IP(L3 헤더), TCP(L4) 헤더, 데이터  
링크 계층: 프레임 헤더, IP(L3) 헤더, TCP(L4) 헤더, 데이터, 프레임 트레일러   
  
애플리케이션 계층의 데이터가 전송 계층으로 전달되면서 "세그먼트 또는 데이터그램화" 되고 TCP(L4) 헤더가 붙여지게 된다.  
이후 인터넷 계층으로 가면서 IP(L3) 헤더가 붙여지게 되며 "패킷화"가 된다.  
이후 링크 계층으로 전달되면서 프레임 헤더와 프레임 트레일러가 붙어 "프레임화" 된다.  
  
> 비캡슐화 과정: 하위 계층에서 상위계층으로 가며 각 계층의 헤더 부분을 제거하는 과정이다.  
캡슐화 된 데이ㅓ를 받게 되면 링크 계층에서부터 타고 올라오면서  
프레임화된 데이터는 다시 패킷화를 거쳐  
세그먼크, 데이터그램화를 거쳐  
메시지화되는 비캡슐화 과정이 일어난다.  
이후 최종적으로 사용자에게 애플리케이션의 PDU 메시지로 전달된다.  
  
> PDU(Protocol Data Unit): 네트워크의 어떤 계층에서 계층으로 데이터가 전달될 때 한 덩어리의 단위이다.  
PDU는 "제어 관련 정보들이 포함된 헤더"와  
"데이터를 의미하는 페이로드"로 구성되어 있고 각 계층마다의 명칭이 다르다.  
  
애플리케이션 계층: 메시지  
전송계층: 세그먼트(TCP), 데이터그램(UDP)  
인터넷 계층: 패킷  
링크 계층: 프레임(데이터링크 계층), 비트(물리 계층)  
  
PDU 중 아래 계층인 비트로 송수신하는 것이 모든 PDU 중 가장 빠르고 효율성이 높지만  
애플리케이션 계층에서 문자열을 기반으로 송수신한다. 이는 헤더에 authorization 값 등  
다른 값들을 넣는 확장이 쉽기 때문이다.  

참고 출처:  
http://www.ktword.co.kr/test/view/view.php?m_temp1=2290  

