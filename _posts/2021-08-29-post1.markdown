---
layout: post
title: week1-주식가격(도중)
date: 2021-08-29 19:20:23 +0900
category: programmers
---
# 주식가격
> 아직 도중 효율성 문제해결해야 함

This is code
```python
#큐 스택 활용
prices = [1,2,3,2,3]
#return = [4,3,1,1,0]
"""
포인트 : 기준이 되는 수 a를 기준으로 뒤에 나오는 수들이 a보다 크면 카운트

"""
#효율성 문제 불합
def solution(prices):    
    answer=[]
    #가격을 비교하고 리스트 요소를 줄이면서 새로운 리스트를 만드는 함수
    def price_check(prices):
        first_p=prices[0]
        cnt=1
        print(first_p)
        #첫번째 수와 비교를 해야하므로 1번쨰 부터 for문 수행
        for price in range(i,len(prices)-1):
            print('price:',price)
            if first_p <= prices[price]:
                cnt+=1
                #제외하기 위해 값을 일정 수로 변경
            #첫번째수 보다 이후에 나오는 수가 작다면
            #(=가격이 떨어졌다면)
            else:
                #비교할 수를 초기화하기 위해 그만 비교 
                break
        #비교했던 첫번째 수를 제외한 리스트 생성
        prices.pop(0)
        print('prices:',prices)
        print('cnt, prices', cnt, prices) 
        return prices, cnt
    #첫번째 수부터 리스트 안에 있는 모든 수들을 비교하는 함수 적용
    for i in range(len(prices)-1):
        prices,cnt=price_check(prices)
    #몇초 동안 이어졌는지 리스트에 기록
        answer.append(cnt)
    #항상 마지막 수는 비교할 수가 없으므로 0    
    answer.append(0)
    print('answer:',answer)
    return answer
        
#2차
#효율성 문제 불합
def solution(prices):    
    #떨어지지 않은 시간을 처음부터 설정해서 진행
    answer=list(range(len(prices))).reverse()
    #가격을 비교하고 리스트 요소를 줄이면서 새로운 리스트를 만드는 함수
    #첫번째 수부터 리스트 안에 있는 모든 수들을 비교하는 함수 적용
    for i in range(len(prices)):
        #첫번째 수와 비교를 해야하므로 1번쨰 부터 for문 수행
        for price in range(i+1,len(prices)):
            print(prices[i], prices[price])
            if prices[i] > prices[price]:
                answer[i]=prices.index(prices[i])-prices.index(prices[price])
                continue
    print('answer:',answer)
    return answer

prices=[1,2,3,2,3]
solution(prices)
#질문참조
#파이썬 리스트에서 prices.pop()은 O(1)이지만 prices.pop(0)은 O(n)에 해당
#2중 for문으로 풀면 O(N**2)이 되어 입력값이 많아지면서 시간초과
#3차
def solution(prices):    
    answer=[]
    #가격을 비교하고 리스트 요소를 줄이면서 새로운 리스트를 만드는 함수
    def price_check(prices):
        cnt=1
        i=0
        #첫번째 수와 비교를 해야하므로 1번쨰 부터 for문 수행
        for price in range(i,len(prices)-1):
            if prices[0] <= prices[price]:
                cnt+=1
                #제외하기 위해 값을 일정 수로 변경
            #첫번째수 보다 이후에 나오는 수가 작다면
            #(=가격이 떨어졌다면)
            else:
                #비교할 수를 초기화하기 위해 그만 비교 
                break
        #비교했던 첫번째 수를 제외한 리스트 생성
        prices.pop(0)
        return prices, cnt
    #첫번째 수부터 리스트 안에 있는 모든 수들을 비교하는 함수 적용
    for i in range(len(prices)-1):
        prices,cnt=price_check(prices)
    #몇초 동안 이어졌는지 리스트에 기록
        answer.append(cnt)
    #항상 마지막 수는 비교할 수가 없으므로 0    
    answer.append(0)
    print('answer:',answer)
    return answer

prices=[1,2,3,2,3]
solution(prices)

prices=[1,2,3,2,3]
solution(prices)
```